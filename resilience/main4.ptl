#int test(i){
#    int j = abs(i%{<size>});
#    int a[][{<size>}] = 
#{

from random import randint, shuffle

res = [[i for i in range(size)] for _ in range(s_level + r_level - 1)]
for i in range(s_level + r_level - 1):
    shuffle(res[i])

last_a = [0 for _ in range(size)]
for i in range(size):
    tmp = res[s_level - 1][i]
    for d in range(r_level - 1):
        tmp = res[d + s_level][tmp]
##    print(tmp)
    last_a[tmp] = res[s_level - 1][i]

res.append(last_a)
        

for d in range(s_level + r_level):
    #{@
    for i in range(size):
        data = res[d][i]
        #{<data>}, @
    #},
#};

#    int* p = &@
for l in range(s_level):
    i = s_level - l - 1
    # a[{<i>}][@
#j@
for l in range(s_level):
    # ]@
#;

#    int* q = &@
for r in range(r_level):
    i = r_level - r - 1 + s_level
    # a[{<i>}][@
#*p@
for r in range(r_level):
    #]@
#;
    
#    printf("p = %d\\n", *p);
#    if (*p == *q){
#        printf("Flag captured! Type II opaque predicate should be satisfiable\\n");
#        return 1;
#    }
#    return 0;
#}

#int main(int argc, char** argv) {
#     return test(atoi(argv[1]));
#}
