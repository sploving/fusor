digraph "CFG for 'add_round_key' function" {
	label="CFG for 'add_round_key' function";

	Node0x55ce6281d690 [shape=record,label="{%0:\l  %1 = alloca i8*, align 8\l  %2 = alloca i8*, align 8\l  %3 = alloca i8, align 1\l  %c = alloca i8, align 1\l  store i8* %state, i8** %1, align 8\l  call void @llvm.dbg.declare(metadata i8** %1, metadata !63, metadata !64),\l... !dbg !65\l  store i8* %w, i8** %2, align 8\l  call void @llvm.dbg.declare(metadata i8** %2, metadata !66, metadata !64),\l... !dbg !67\l  store i8 %r, i8* %3, align 1\l  call void @llvm.dbg.declare(metadata i8* %3, metadata !68, metadata !64),\l... !dbg !69\l  call void @llvm.dbg.declare(metadata i8* %c, metadata !70, metadata !64),\l... !dbg !71\l  store i8 0, i8* %c, align 1, !dbg !72\l  br label %4, !dbg !74\l}"];
	Node0x55ce6281d690 -> Node0x55ce6282e2c0;
	Node0x55ce6282e2c0 [shape=record,label="{%4:\l\l  %5 = load i8, i8* %c, align 1, !dbg !75\l  %6 = zext i8 %5 to i32, !dbg !75\l  %7 = load i32, i32* @Nb, align 4, !dbg !78\l  %8 = icmp slt i32 %6, %7, !dbg !79\l  br i1 %8, label %9, label %153, !dbg !80\l|{<s0>T|<s1>F}}"];
	Node0x55ce6282e2c0:s0 -> Node0x55ce6282e310;
	Node0x55ce6282e2c0:s1 -> Node0x55ce6282e3b0;
	Node0x55ce6282e310 [shape=record,label="{%9:\l\l  %10 = load i32, i32* @Nb, align 4, !dbg !81\l  %11 = mul nsw i32 %10, 0, !dbg !83\l  %12 = load i8, i8* %c, align 1, !dbg !84\l  %13 = zext i8 %12 to i32, !dbg !84\l  %14 = add nsw i32 %11, %13, !dbg !85\l  %15 = sext i32 %14 to i64, !dbg !86\l  %16 = load i8*, i8** %1, align 8, !dbg !86\l  %17 = getelementptr inbounds i8, i8* %16, i64 %15, !dbg !86\l  %18 = load i8, i8* %17, align 1, !dbg !86\l  %19 = zext i8 %18 to i32, !dbg !86\l  %20 = load i32, i32* @Nb, align 4, !dbg !87\l  %21 = mul nsw i32 4, %20, !dbg !88\l  %22 = load i8, i8* %3, align 1, !dbg !89\l  %23 = zext i8 %22 to i32, !dbg !89\l  %24 = mul nsw i32 %21, %23, !dbg !90\l  %25 = load i8, i8* %c, align 1, !dbg !91\l  %26 = zext i8 %25 to i32, !dbg !91\l  %27 = mul nsw i32 4, %26, !dbg !92\l  %28 = add nsw i32 %24, %27, !dbg !93\l  %29 = add nsw i32 %28, 0, !dbg !94\l  %30 = sext i32 %29 to i64, !dbg !95\l  %31 = load i8*, i8** %2, align 8, !dbg !95\l  %32 = getelementptr inbounds i8, i8* %31, i64 %30, !dbg !95\l  %33 = load i8, i8* %32, align 1, !dbg !95\l  %34 = zext i8 %33 to i32, !dbg !95\l  %35 = xor i32 %19, %34, !dbg !96\l  %36 = trunc i32 %35 to i8, !dbg !86\l  %37 = load i32, i32* @Nb, align 4, !dbg !97\l  %38 = mul nsw i32 %37, 0, !dbg !98\l  %39 = load i8, i8* %c, align 1, !dbg !99\l  %40 = zext i8 %39 to i32, !dbg !99\l  %41 = add nsw i32 %38, %40, !dbg !100\l  %42 = sext i32 %41 to i64, !dbg !101\l  %43 = load i8*, i8** %1, align 8, !dbg !101\l  %44 = getelementptr inbounds i8, i8* %43, i64 %42, !dbg !101\l  store i8 %36, i8* %44, align 1, !dbg !102\l  %45 = load i32, i32* @Nb, align 4, !dbg !103\l  %46 = mul nsw i32 %45, 1, !dbg !104\l  %47 = load i8, i8* %c, align 1, !dbg !105\l  %48 = zext i8 %47 to i32, !dbg !105\l  %49 = add nsw i32 %46, %48, !dbg !106\l  %50 = sext i32 %49 to i64, !dbg !107\l  %51 = load i8*, i8** %1, align 8, !dbg !107\l  %52 = getelementptr inbounds i8, i8* %51, i64 %50, !dbg !107\l  %53 = load i8, i8* %52, align 1, !dbg !107\l  %54 = zext i8 %53 to i32, !dbg !107\l  %55 = load i32, i32* @Nb, align 4, !dbg !108\l  %56 = mul nsw i32 4, %55, !dbg !109\l  %57 = load i8, i8* %3, align 1, !dbg !110\l  %58 = zext i8 %57 to i32, !dbg !110\l  %59 = mul nsw i32 %56, %58, !dbg !111\l  %60 = load i8, i8* %c, align 1, !dbg !112\l  %61 = zext i8 %60 to i32, !dbg !112\l  %62 = mul nsw i32 4, %61, !dbg !113\l  %63 = add nsw i32 %59, %62, !dbg !114\l  %64 = add nsw i32 %63, 1, !dbg !115\l  %65 = sext i32 %64 to i64, !dbg !116\l  %66 = load i8*, i8** %2, align 8, !dbg !116\l  %67 = getelementptr inbounds i8, i8* %66, i64 %65, !dbg !116\l  %68 = load i8, i8* %67, align 1, !dbg !116\l  %69 = zext i8 %68 to i32, !dbg !116\l  %70 = xor i32 %54, %69, !dbg !117\l  %71 = trunc i32 %70 to i8, !dbg !107\l  %72 = load i32, i32* @Nb, align 4, !dbg !118\l  %73 = mul nsw i32 %72, 1, !dbg !119\l  %74 = load i8, i8* %c, align 1, !dbg !120\l  %75 = zext i8 %74 to i32, !dbg !120\l  %76 = add nsw i32 %73, %75, !dbg !121\l  %77 = sext i32 %76 to i64, !dbg !122\l  %78 = load i8*, i8** %1, align 8, !dbg !122\l  %79 = getelementptr inbounds i8, i8* %78, i64 %77, !dbg !122\l  store i8 %71, i8* %79, align 1, !dbg !123\l  %80 = load i32, i32* @Nb, align 4, !dbg !124\l  %81 = mul nsw i32 %80, 2, !dbg !125\l  %82 = load i8, i8* %c, align 1, !dbg !126\l  %83 = zext i8 %82 to i32, !dbg !126\l  %84 = add nsw i32 %81, %83, !dbg !127\l  %85 = sext i32 %84 to i64, !dbg !128\l  %86 = load i8*, i8** %1, align 8, !dbg !128\l  %87 = getelementptr inbounds i8, i8* %86, i64 %85, !dbg !128\l  %88 = load i8, i8* %87, align 1, !dbg !128\l  %89 = zext i8 %88 to i32, !dbg !128\l  %90 = load i32, i32* @Nb, align 4, !dbg !129\l  %91 = mul nsw i32 4, %90, !dbg !130\l  %92 = load i8, i8* %3, align 1, !dbg !131\l  %93 = zext i8 %92 to i32, !dbg !131\l  %94 = mul nsw i32 %91, %93, !dbg !132\l  %95 = load i8, i8* %c, align 1, !dbg !133\l  %96 = zext i8 %95 to i32, !dbg !133\l  %97 = mul nsw i32 4, %96, !dbg !134\l  %98 = add nsw i32 %94, %97, !dbg !135\l  %99 = add nsw i32 %98, 2, !dbg !136\l  %100 = sext i32 %99 to i64, !dbg !137\l  %101 = load i8*, i8** %2, align 8, !dbg !137\l  %102 = getelementptr inbounds i8, i8* %101, i64 %100, !dbg !137\l  %103 = load i8, i8* %102, align 1, !dbg !137\l  %104 = zext i8 %103 to i32, !dbg !137\l  %105 = xor i32 %89, %104, !dbg !138\l  %106 = trunc i32 %105 to i8, !dbg !128\l  %107 = load i32, i32* @Nb, align 4, !dbg !139\l  %108 = mul nsw i32 %107, 2, !dbg !140\l  %109 = load i8, i8* %c, align 1, !dbg !141\l  %110 = zext i8 %109 to i32, !dbg !141\l  %111 = add nsw i32 %108, %110, !dbg !142\l  %112 = sext i32 %111 to i64, !dbg !143\l  %113 = load i8*, i8** %1, align 8, !dbg !143\l  %114 = getelementptr inbounds i8, i8* %113, i64 %112, !dbg !143\l  store i8 %106, i8* %114, align 1, !dbg !144\l  %115 = load i32, i32* @Nb, align 4, !dbg !145\l  %116 = mul nsw i32 %115, 3, !dbg !146\l  %117 = load i8, i8* %c, align 1, !dbg !147\l  %118 = zext i8 %117 to i32, !dbg !147\l  %119 = add nsw i32 %116, %118, !dbg !148\l  %120 = sext i32 %119 to i64, !dbg !149\l  %121 = load i8*, i8** %1, align 8, !dbg !149\l  %122 = getelementptr inbounds i8, i8* %121, i64 %120, !dbg !149\l  %123 = load i8, i8* %122, align 1, !dbg !149\l  %124 = zext i8 %123 to i32, !dbg !149\l  %125 = load i32, i32* @Nb, align 4, !dbg !150\l  %126 = mul nsw i32 4, %125, !dbg !151\l  %127 = load i8, i8* %3, align 1, !dbg !152\l  %128 = zext i8 %127 to i32, !dbg !152\l  %129 = mul nsw i32 %126, %128, !dbg !153\l  %130 = load i8, i8* %c, align 1, !dbg !154\l  %131 = zext i8 %130 to i32, !dbg !154\l  %132 = mul nsw i32 4, %131, !dbg !155\l  %133 = add nsw i32 %129, %132, !dbg !156\l  %134 = add nsw i32 %133, 3, !dbg !157\l  %135 = sext i32 %134 to i64, !dbg !158\l  %136 = load i8*, i8** %2, align 8, !dbg !158\l  %137 = getelementptr inbounds i8, i8* %136, i64 %135, !dbg !158\l  %138 = load i8, i8* %137, align 1, !dbg !158\l  %139 = zext i8 %138 to i32, !dbg !158\l  %140 = xor i32 %124, %139, !dbg !159\l  %141 = trunc i32 %140 to i8, !dbg !149\l  %142 = load i32, i32* @Nb, align 4, !dbg !160\l  %143 = mul nsw i32 %142, 3, !dbg !161\l  %144 = load i8, i8* %c, align 1, !dbg !162\l  %145 = zext i8 %144 to i32, !dbg !162\l  %146 = add nsw i32 %143, %145, !dbg !163\l  %147 = sext i32 %146 to i64, !dbg !164\l  %148 = load i8*, i8** %1, align 8, !dbg !164\l  %149 = getelementptr inbounds i8, i8* %148, i64 %147, !dbg !164\l  store i8 %141, i8* %149, align 1, !dbg !165\l  br label %150, !dbg !166\l}"];
	Node0x55ce6282e310 -> Node0x55ce6282e360;
	Node0x55ce6282e360 [shape=record,label="{%150:\l\l  %151 = load i8, i8* %c, align 1, !dbg !167\l  %152 = add i8 %151, 1, !dbg !167\l  store i8 %152, i8* %c, align 1, !dbg !167\l  br label %4, !dbg !169\l}"];
	Node0x55ce6282e360 -> Node0x55ce6282e2c0;
	Node0x55ce6282e3b0 [shape=record,label="{%153:\l\l  ret void, !dbg !170\l}"];
}
